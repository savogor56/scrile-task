{"version":3,"sources":["components/Loader/style.module.scss","components/Autocomplete/components/UserList/style.module.scss","components/Autocomplete/style.module.scss","app.module.scss","components/Autocomplete/components/User/style.module.scss","components/Autocomplete/assets/SearchIcon.svg","services/hooks.ts","api/config.ts","api/index.ts","store/users/index.ts","components/Loader/index.tsx","components/Autocomplete/components/User/index.tsx","components/Autocomplete/components/UserList/index.tsx","store/users/operations.ts","components/Autocomplete/index.tsx","App.tsx","store/index.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","SvgSearchIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","ForwardRef","useAppSelector","useSelector","instance","axios","create","baseURL","usersApi","get","response","data","users","createSlice","name","initialState","isFetching","usersData","reducers","setIsFetching","state","payload","setUsers","actions","Loader","className","s","loader","User","user","onSelect","onClick","root","content","src","photo","url","alt","userInfo","email","UserList","search","setSearch","onClose","dispatch","useDispatch","handleSelect","useEffect","a","usersWithPhoto","item","push","filter","map","Autocomplete","useState","display","setDisplay","inputEl","useRef","autoRef","handleDisplay","prevState","handleClickOutside","e","auto","current","contains","document","addEventListener","removeEventListener","inputWrap","focus","type","placeholder","value","onChange","App","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be75d73d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"style_loader__3n_we\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1poxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"style_inputWrap__bge8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__1DnII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2umvb\",\"content\":\"style_content__9PDWu\",\"userInfo\":\"style_userInfo__64Yu1\",\"name\":\"style_name__28Blh\",\"email\":\"style_email__2ymPJ\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.5 11H11.71L11.43 10.73C12.63 9.33 13.25 7.42 12.91 5.39C12.44 2.61 10.12 0.39 7.32002 0.05C3.09002 -0.47 -0.469985 3.09 0.0500152 7.32C0.390015 10.12 2.61002 12.44 5.39002 12.91C7.42002 13.25 9.33002 12.63 10.73 11.43L11 11.71V12.5L15.25 16.75C15.66 17.16 16.33 17.16 16.74 16.75C17.15 16.34 17.15 15.67 16.74 15.26L12.5 11ZM6.50002 11C4.01002 11 2.00002 8.99 2.00002 6.5C2.00002 4.01 4.01002 2 6.50002 2C8.99002 2 11 4.01 11 6.5C11 8.99 8.99002 11 6.50002 11Z\",\n  fill: \"#656667\"\n});\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/SearchIcon.2dfa7e3b.svg\";\nexport { ForwardRef as ReactComponent };","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\nimport type { RootState, AppDispatch } from \"../store\"\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import axios from \"axios\"\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})","import {instance} from \"./config\"\r\nimport {UserData, UserPhoto} from \"../services/types/users\"\r\n\r\nexport const usersApi = {\r\n    async getUsers() {\r\n        const response = await instance.get<UserData[]>('/users')\r\n        return response.data\r\n    },\r\n    async getPhoto(id: number) {\r\n        const response = await instance.get<UserPhoto>(`photos/${id}`)\r\n        return response.data\r\n    }\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\nimport {UserData} from \"../../services/types/users\"\r\n\r\nexport const users = createSlice({\r\n    name: 'users',\r\n    initialState: {\r\n        isFetching: false,\r\n        usersData: null as UserData[] | null\r\n    },\r\n    reducers: {\r\n        setIsFetching: (state, {payload}: PayloadAction<boolean>) => {\r\n            state.isFetching = payload\r\n        },\r\n        setUsers: (state, {payload}: PayloadAction<UserData[]>) => {\r\n            state.usersData = payload\r\n        }\r\n    }\r\n})\r\n\r\nexport default users.reducer\r\nexport const {setIsFetching, setUsers} = users.actions","import s from \"./style.module.scss\"\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className={s.loader} >\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}","import {UserData} from \"../../../../services/types/users\"\r\nimport s from \"./style.module.scss\"\r\n\r\n\r\ninterface Props {\r\n    user: UserData\r\n    onSelect: (name: string) => void\r\n}\r\n\r\nexport const User: React.FC<Props> = ({user, onSelect}) => {\r\n    return (\r\n        <div onClick={() => onSelect(user.name)} className={s.root}>\r\n            <div className={s.content}>\r\n                <img src={user.photo?.url} alt=\"\"/>\r\n                <div className={s.userInfo}>\r\n                    <div className={s.name}>{user.name}</div>\r\n                    <div className={s.email}>{user.email}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect } from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../../../../services/hooks\"\r\nimport { fetchUsers } from \"../../../../store/users/operations\"\r\nimport { Loader } from \"../../../Loader\"\r\nimport { User } from \"../User\"\r\nimport s from \"./style.module.scss\"\r\n\r\ninterface Props {\r\n    search: string\r\n    setSearch: React.Dispatch<React.SetStateAction<string>>\r\n    onClose: () => void\r\n}\r\n\r\nexport const UserList: React.FC<Props> = ({ search, setSearch, onClose}) => {\r\n    const dispatch = useAppDispatch()\r\n    const {usersData, isFetching} = useAppSelector(state => state.users)\r\n\r\n    const handleSelect = (name: string) => {\r\n        setSearch(name)\r\n        onClose()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            {!isFetching &&\r\n                usersData?.filter(({name}) => name.indexOf(search) > -1).map(user => (\r\n                    <User key={user.id} user={user} onSelect={handleSelect} />\r\n                ))\r\n            }\r\n            {isFetching && <Loader />}\r\n        </div>\r\n    )\r\n}","import {AppDispatch} from \"../index\"\r\nimport {usersApi} from \"../../api\"\r\nimport {setIsFetching, setUsers} from \"./index\"\r\n\r\nexport const fetchUsers = () => async (dispatch: AppDispatch) => {\r\n    dispatch(setIsFetching(true))\r\n    const users = await usersApi.getUsers()\r\n    const usersWithPhoto = []\r\n    for (let item of users) {\r\n        const photo = await usersApi.getPhoto(item.id)\r\n        usersWithPhoto.push({\r\n            ...item,\r\n            photo\r\n        })\r\n    }\r\n    dispatch(setUsers(usersWithPhoto))\r\n    dispatch(setIsFetching(false))\r\n}","import {ReactComponent as SearchIcon} from \"./assets/SearchIcon.svg\"\r\nimport {UserList} from \"./components/UserList\"\r\nimport s from \"./style.module.scss\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\n\r\nexport const Autocomplete = () => {\r\n    const [display, setDisplay] = useState(false)\r\n    const inputEl = useRef<HTMLInputElement | null>(null)\r\n    const autoRef = useRef<HTMLDivElement | null>(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    const handleDisplay = () => {\r\n        setDisplay(prevState => !prevState)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        inputEl.current?.focus()\r\n        handleDisplay()\r\n    }\r\n\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n        const {current: auto} = autoRef\r\n        if (auto && !auto.contains((e.target as Node))) {\r\n            setDisplay(false)\r\n        }      \r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={autoRef}>\r\n            <div className={s.inputWrap} onClick={handleClick}>\r\n                <SearchIcon />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Search\" \r\n                    ref={inputEl}\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            { display && <UserList search={search} setSearch={setSearch} onClose={handleDisplay} /> }\r\n        </div>\r\n    )\r\n}","import {Autocomplete} from \"./components/Autocomplete\"\r\nimport s from \"./app.module.scss\"\r\n\r\nexport const App = () => {\r\n  \r\n  return (\r\n      <div className={s.root}>        \r\n        <Autocomplete />\r\n      </div>\r\n  )\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\nimport users from \"./users\"\n\nexport const store = configureStore({\n  reducer: {\n    users\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the services load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web services is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different services. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.scss\"\r\nimport {App} from \"./App\"\r\nimport { store } from \"./store\"\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()"],"sourceRoot":""}